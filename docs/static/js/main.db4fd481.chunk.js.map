{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputVal","setinputVal","onSubmit","e","preventDefault","trim","length","ctg","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setstate","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","cat","ReactDOM","render","document","getElementById"],"mappings":"qMAIaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAAoB,EACdC,mBAAS,IADK,mBACvCC,EADuC,KAC7BC,EAD6B,KAiB9C,OAEI,0BAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAECJ,EAASK,OAAOC,OAAS,IAExBR,GAAc,SAAAS,GAAG,OAAKP,GAAL,mBAAkBO,OACnCN,EAAY,OAOZ,2BACIO,KAAK,OACLC,MAAQT,EACRU,SApBc,SAACP,GACvBF,EAAYE,EAAEQ,OAAOF,Y,uBCRhBG,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DAGbC,EAHa,iDAGoCC,UAAUH,GAH9C,sDAIAI,MAAOF,GAJP,cAIbG,EAJa,gBAKIA,EAAKC,OALT,uBAKXC,EALW,EAKXA,KAEFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAcZM,GAdY,4CAAH,sDCEPO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAEjC,OACI,yBAAKc,UAAU,8CACX,yBAAKC,IAAMf,EAAMgB,IAAKN,IACtB,2BAAIA,KCHHO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAAe,ECDb,SAAEA,GAAe,IAAD,EAEdd,mBAAS,CAC/BqB,KAAK,GACLa,SAAQ,IAJ4B,mBAEjCC,EAFiC,KAE1BC,EAF0B,KAmBxC,OAZAC,qBAAW,WAEPxB,EAASC,GACJwB,MAAM,SAAAC,GACHH,EAAS,CACLf,KAAKkB,EACLL,SAAS,SAIvB,CAACpB,IAEIqB,EDf0BK,CAAc1B,GAAlCa,EAHwB,EAG7BN,KAAaa,EAHgB,EAGhBA,QAKrB,OACI,oCACI,wBAAIJ,UAAU,yCAA0ChB,GACtDoB,GAAW,uBAAGJ,UAAU,yCAAb,WAEb,yBAAKA,UAAU,aAGPH,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eACIiB,IAAMjB,EAAIC,IACND,UEYjBkB,EA/BM,WAAM,IAAD,EACc1C,mBAAS,CAAC,WADxB,mBACf2C,EADe,KACH5C,EADG,KAWtB,OAAQ,oCACJ,4CACA,kBAAC,EAAD,CAAaA,cAAgBA,IAC7B,6BAIA,4BAEQ4C,EAAWpB,KAAK,SAAAqB,GAAG,OACf,kBAAC,EAAD,CACIH,IAAMG,EACN9B,SAAW8B,U,MCtBnCC,IAASC,OACL,kBAAC,EAAD,MACFC,SAASC,eAAe,U","file":"static/js/main.db4fd481.chunk.js","sourcesContent":["import React, {  useState } from 'react';\r\nimport PropTypes from 'prop-types'\r\n\r\n//Tarea 2: Agregar los PropTypes para setCategories que sea obligatoria\r\nexport const AddCategory = ({ setCategories }) => {\r\n    const [inputVal, setinputVal] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputVal(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        if(inputVal.trim().length > 2){\r\n            //Tarea 1: recibir setCategories en este componente y llamarlo desde esta funciÃ³n\r\n            setCategories(ctg => [inputVal, ...ctg,]);\r\n            setinputVal('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        \r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputVal }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )    \r\n}\r\n\r\nAddCategory.propTypes = {\r\n    setCategories: PropTypes.func.isRequired,\r\n}","export const getGifs = async( category ) => {\r\n\r\n\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&api_key=jKiSISKUFH3RU6cnLlLKm1q8r96fIxHz`;\r\n    const resp = await fetch( url );\r\n    const { data } = await resp.json();\r\n\r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    })\r\n    return gifs;\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ( {title, url} ) => {\r\n    \r\n    return (\r\n        <div className='card animate__animated animate__fadeInDown'>\r\n            <img src={ url } alt={title} />\r\n            <p>{title}</p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n\r\nexport const GifGrid = ({ category }) => {\r\n\r\n\r\n    const { data:images, loading } = useFetchGifs( category );\r\n\r\n\r\n\r\n    \r\n    return (\r\n        <>\r\n            <h3 className='animate__animated animate__fadeInDown'>{ category }</h3>\r\n            { loading && <p className='animate__animated animate__fadeInDown'>Loading</p> }\r\n\r\n            <div className='card-grid'>\r\n\r\n                {\r\n                    images.map( img => (\r\n                        <GifGridItem\r\n                            key={ img.id }\r\n                            {...img}\r\n                        />\r\n                    ))\r\n                }\r\n\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = ( category ) => {\r\n   \r\n    const [state, setstate] = useState({\r\n        data:[],\r\n        loading:true\r\n    });\r\n\r\n    useEffect( () => {\r\n\r\n        getGifs( category )\r\n            .then( imgs => {\r\n                setstate({\r\n                    data:imgs,\r\n                    loading: false\r\n                });\r\n            })\r\n            \r\n    },[category])\r\n\r\n    return state; // {data:[], loading:true}\r\n}\r\n","import React, { useState } from 'react';\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nconst GifExpertApp = () =>{\r\n    const [categories, setCategories] = useState(['Bleach']);\r\n\r\n    //Tarea, agregar uno o mas elementos dento de categorias\r\n    // const handleAdd = () =>{\r\n    //     const newsAdd = ['Naruto', 'Sailor Moon', 'Kenichi'];\r\n    //     setCategories([...categories, ...newsAdd]);\r\n    //Forma mas eficiente para llamar setCategories\r\n    //      setCategories(ctg => [...ctg, ...newsAdd]);        \r\n    // }\r\n\r\n    return (<>\r\n        <h2>GifExpertApp</h2>\r\n        <AddCategory setCategories={ setCategories }/>\r\n        <hr />\r\n\r\n        {/* <button onClick={ handleAdd }>Agregar</button> */}\r\n\r\n        <ol>\r\n            {\r\n                categories.map( cat =>(\r\n                    <GifGrid \r\n                        key={ cat }\r\n                        category={ cat }\r\n                    />\r\n                ))\r\n            }\r\n        </ol>\r\n    </>);\r\n}\r\n\r\nexport default GifExpertApp;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp'\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);"],"sourceRoot":""}